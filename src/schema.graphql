# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AddDeliveryAreasInput {
  active: Boolean!
  charge: Int!
  label: String!
  label_ar: String!
}

"""Attendance Type"""
enum AttendanceType {
  ONLINE
  PHYSICAL
}

type Auth {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
  user: User!
}

type BadgeType {
  label: AttendanceType!
}

type Booking {
  cart: Cart
  cartId: String

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  holdTimestamp: DateTime
  id: ID!
  order: Order
  orderId: String
  product: Product
  productId: String!
  slots: [BookingTime!]
  status: BookingStatus!
  tag: Tag
  tagId: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
  vendorId: String!
}

input BookingSlotInput {
  from: DateTime!
  to: DateTime!
}

"""Booking Status"""
enum BookingStatus {
  CONFIRMED
  HOLD
  PENDING
  REJECTED
}

type BookingTime {
  from: DateTime!
  to: DateTime!
}

input BookingTimeInput {
  from: DateTime!
  to: DateTime!
}

type Cart {
  appliedCoupon: String

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  customerId: String!
  customerInfo: CustomerInfo
  deliveryMethod: DeliveryMethods
  finalPrice: Float!
  id: ID!
  items: [CartItem!]!
  paymentMethod: PaymentMethods
  totalPrice: Float!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
  vendorId: String!
}

type CartItem {
  active: Boolean
  answers: String
  attendanceType: AttendanceType
  badge: BadgeType
  bookedSeats: Int
  category: Category
  categoryId: String
  customerLocation: Boolean
  description: String
  description_ar: String
  duration: Int
  endDate: DateTime
  endTime: Boolean
  form: Form
  formId: String
  image: String
  itemsInStock: Int
  location: String
  meetingLink: String
  minPreorderDays: Int
  noOfSeats: Int
  price: Float!
  productId: String!
  quantity: Int!
  sku: String!
  slots: [BookingTime!]
  slug: String
  sortOrder: Int
  startDate: DateTime
  tagId: String
  tagIds: [String!]
  tags: [Tag!]
  title: String
  title_ar: String
  type: ProductType
  variants: [Variant!]
  vendor: Vendor!
}

input CartItemInput {
  answers: String
  productId: String!
  quantity: Int = 1
  sku: String!
  slots: [BookingTimeInput!]
  tagId: String
}

input CartUpdateInput {
  appliedCoupon: String
  customerInfo: CustomerInput
  deliveryMethod: DeliveryMethods
  items: [CartItemInput!]
  paymentMethod: PaymentMethods
}

type Category {
  active: Boolean!

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  id: ID!
  products: [Product!]!
  slug: String
  sortOrder: Int!
  title: String!
  title_ar: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
  vendor: Vendor!
  vendorId: String!
}

input Certificate {
  image: String!
  title: String!
}

type Certificates {
  image: String!
  title: String!
}

input ChangePasswordInput {
  newPassword: String!
  oldPassword: String!
}

input CheckOtpInput {
  code: String!
  phone: String!
}

type CheckOtpResponse {
  id: String!
  status: OtpStatusCode!
  to: String!
}

type Coordinates {
  lat: Float!
  lng: Float!
}

type Coupon {
  active: Boolean!
  code: String!

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  discount: Float!
  id: ID!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
  vendor: Vendor!
  vendorId: String!
}

input CreateBookingInput {
  customerInfo: CustomerInput!
  productId: String!
  slots: [BookingSlotInput!]!
  status: BookingStatus!
  tagId: String!
  vendorId: String!
}

input CreateCategoryInput {
  active: Boolean!
  slug: String
  sortOrder: Int
  title: String!
  title_ar: String!
  vendorId: String!
}

input CreateCouponInput {
  active: Boolean!
  code: String!
  discount: Float!
  vendorId: String!
}

input CreateFormInput {
  content: String!
  vendorId: String!
}

input CreateProductInput {
  active: Boolean!
  attendanceType: AttendanceType
  categoryId: String
  customerLocation: Boolean
  description: String!
  description_ar: String!
  duration: Int
  endDate: DateTime
  endTime: Boolean
  formId: String
  image: String!
  itemsInStock: Int
  location: String
  meetingLink: String
  minPreorderDays: Int
  noOfSeats: Int
  slug: String!
  sortOrder: Int
  startDate: DateTime
  tags: [String!]
  title: String!
  title_ar: String!
  type: ProductType!
  variants: [VariantInput!]
  vendorId: String!
}

input CreateTagInput {
  active: Boolean!
  productIds: [String!]
  title: String!
  title_ar: String!
  vendorId: String!
  workdays: [WorkDayInput!]!
}

input CreateVendorInput {
  name: String!
  slug: String!
}

type CustomerInfo {
  address: String
  city: String
  email: String!
  firstName: String!
  lastName: String!
  phone: String!
}

input CustomerInput {
  address: String
  city: String
  email: String!
  firstName: String!
  lastName: String!
  phone: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type DeliveryAreas {
  active: Boolean!
  charge: Int!
  label: String!
  label_ar: String!
}

"""Delivery Methods"""
enum DeliveryMethods {
  MANDOOB
  PICKUP
  SMSA
}

type ExecutePayment {
  CustomerReference: String!
  InvoiceId: Int!
  IsDirectPayment: Boolean!
  PaymentURL: String!
  RecurringId: String!
}

type ExecutePaymentError {
  Error: String!
  Name: String!
}

type Form {
  content: String!

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  id: ID!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
  vendor: Vendor!
  vendorId: String!
}

type GetPaymentStatusResponse {
  Comments: String!
  CreatedDate: String!
  CustomerEmail: String!
  CustomerMobile: String!
  CustomerName: String!
  CustomerReference: String!
  DepositStatus: String!
  DueDeposit: Int!
  ExpiryDate: String!
  ExpiryTime: String!
  InvoiceDisplayValue: String!
  InvoiceId: Int!
  InvoiceItems: [InvoiceItemModel!]!
  InvoiceReference: String!
  InvoiceStatus: String!
  InvoiceTransactions: [TransactionModel!]!
  InvoiceValue: Int!
  Suppliers: [SupplierModel!]!
  UserDefinedField: String!
}

type InvoiceItemModel {
  Depth: Int
  Height: Int
  ItemName: String!
  Quantity: Int!
  UnitPrice: Int!
  Weight: Int
  Width: Int
}

"""
A field whose value is a JSON Web Token (JWT): https://jwt.io/introduction.
"""
scalar JWT

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  addDeliveryAreas(areas: [AddDeliveryAreasInput!]!, id: String!): Vendor!
  addItemToCart(cartId: String!, data: CartItemInput!): Cart!
  addProductToCart(cartId: String!, data: CartItemInput!): Cart!
  addServiceToCart(cartId: String!, data: CartItemInput!): Cart!
  addWorkshopToCart(cartId: String!, data: CartItemInput!): Cart!
  changePassword(data: ChangePasswordInput!): User!
  checkoutCart(cartId: String!, paymentSession: String): OrderPayment!
  createBooking(data: CreateBookingInput!): Booking!
  createCategory(data: CreateCategoryInput!): Category!
  createCoupon(data: CreateCouponInput!): Coupon!
  createForm(data: CreateFormInput!): Form!
  createProduct(data: CreateProductInput!): Product!
  createTag(data: CreateTagInput!): Tag!
  createUser(data: SignupInput!): Auth!
  createVendor(data: CreateVendorInput!): Vendor!
  deleteBooking(id: String!): Booking!
  deleteCategory(id: String!): Category!
  deleteCoupon(id: String!): Coupon!
  deleteForm(id: String!): Form!
  deleteOrder(id: String!): Order!
  deleteProduct(id: String!): Product!
  deleteTag(id: String!): Tag!
  deleteVendor(id: String!): Vendor!
  initiatePaymentSession: PaymentSession!
  login(data: LoginInput!): Auth!
  phoneLogin(data: PhoneLoginInput!): OtpResponse!
  refreshToken(token: JWT!): Token!
  removeCartItem(cartId: String!, productId: String!, sku: String!): Cart!
  sendOtp(data: SendOtpInput!): OtpResponse!
  signup(data: SignupInput!): Auth!
  updateBooking(data: UpdateBookingInput!, id: String!): Booking!
  updateCart(cartId: String!, data: CartUpdateInput!): Cart!
  updateCartItem(cartId: String!, data: CartItemInput!): Cart!
  updateCategory(data: UpdateCategoryInput!, id: String!): Category!
  updateCoupon(data: UpdateCouponInput!, id: String!): Coupon!
  updateForm(data: UpdateFormInput!, id: String!): Form!
  updateOrder(data: UpdateOrderInput!, id: String!): Order!
  updateProduct(data: UpdateProductInput!, id: String!): Product!
  updateTag(data: UpdateTagInput!, id: String!): Tag!
  updateUser(data: UpdateUserInput!): User!
  updateVendor(data: UpdateVendorInput!, id: String!): Vendor!
  uploadFile(file: String!, key: String!): String!
  verifyOtp(data: CheckOtpInput!): CheckOtpResponse!
  verifyPhone(data: PhoneVerify!): Auth!
}

type Order {
  appliedCoupon: String
  cart: Cart
  cartId: String!

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  customerId: String
  customerInfo: CustomerInfo
  deliveryMethod: DeliveryMethods
  finalPrice: Float!
  id: ID!
  invoiceId: String
  items: [CartItem!]!
  orderId: String!
  paymentMethod: PaymentMethods
  status: OrderStatus!
  totalPrice: Float!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
  vendor: Vendor
  vendorId: String!
  wayBill: WayBill
}

"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  asc
  desc
}

type OrderPayment {
  appliedCoupon: String
  cart: Cart
  cartId: String!

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  customerId: String
  customerInfo: CustomerInfo
  deliveryMethod: DeliveryMethods
  errors: [ExecutePaymentError!]
  finalPrice: Float!
  id: ID!
  invoiceId: String
  items: [CartItem!]!
  orderId: String!
  payment: ExecutePayment
  paymentMethod: PaymentMethods
  status: OrderStatus!
  totalPrice: Float!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
  vendor: Vendor
  vendorId: String!
  wayBill: WayBill
}

"""Order status"""
enum OrderStatus {
  COMPLETED
  CONFIRMED
  CREATED
  FAILED
  PENDING
  REJECTED
}

input OrdersFilterInput {
  field: String!
  title: String
}

type OtpResponse {
  id: String!
  to: String!
}

"""OTP status code"""
enum OtpStatusCode {
  ALREADY_VERIFIED
  ATTEMPTS_EXCEEDED
  CODE_EXPIRED
  CORRECT
  INCORRECT
}

type PaginatedProducts {
  list: [Product!]
  totalCount: Int!
}

input PaginationArgs {
  page: Int
  pageSize: Int
}

"""Payment Methods"""
enum PaymentMethods {
  BANK_TRANSFER
  CASH
  ONLINE
  STORE
}

type PaymentSession {
  CountryCode: String!
  SessionId: String!
}

input PhoneLoginInput {
  phone: String!
}

input PhoneVerify {
  code: String!
  phone: String!
}

type Product {
  active: Boolean!
  attendanceType: AttendanceType
  badge: BadgeType
  bookedSeats: Int
  category: Category
  categoryId: String

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  customerLocation: Boolean
  description: String!
  description_ar: String!
  duration: Int
  endDate: DateTime!
  endTime: Boolean
  form: Form
  formId: String!
  id: ID!
  image: String!
  itemsInStock: Int
  location: String
  meetingLink: String
  minPreorderDays: Int
  noOfSeats: Int
  slug: String!
  sortOrder: Int
  startDate: DateTime!
  tagIds: [String!]!
  tags: [Tag!]
  title: String!
  title_ar: String!
  type: ProductType!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
  variants: [Variant!]
  vendor: Vendor!
  vendorId: String!
}

input ProductFilterInput {
  attendanceType: AttendanceType
  type: ProductType
}

"""Product Type"""
enum ProductType {
  PRODUCT
  SERVICE
  WORKSHOP
}

type Query {
  getBooking(id: String!): Booking!
  getBookings(productId: String, tagId: String, vendorId: String!): [Booking!]!
  getCategories(active: Boolean, pagination: PaginationArgs, sortOrder: SortOrder, vendorId: String!): [Category!]!
  getCategory(id: String!): Category!
  getCoupon(id: String!): Coupon!
  getCoupons(pagination: PaginationArgs, sortOrder: SortOrder, vendorId: String): [Coupon!]!
  getCustomerCart(customerId: String!, vendorId: String!): Cart!
  getForm(id: String!): Form!
  getForms(pagination: PaginationArgs, vendorId: String): [Form!]!
  getOrder(id: String!): Order!
  getOrders(filter: OrdersFilterInput, pagination: PaginationArgs, sortOrder: SortOrder, vendorId: String): [Order!]!
  getPaymentStatus(orderId: String!): GetPaymentStatusResponse!
  getProduct(id: String!): Product!
  getProducts(categoryId: String, filter: ProductFilterInput, pagination: PaginationArgs, sortOrder: SortOrder, vendorId: String!): PaginatedProducts!
  getTag(id: String!): Tag!
  getTagAvailabilityByDate(date: String!, productId: String!, tagId: String!): [String!]!
  getTags(pagination: PaginationArgs, sortOrder: SortOrder, vendorId: String): [Tag!]!
  getTagsByProduct(productId: String!): [Tag!]!
  getVendor(id: String!): Vendor!
  getVendorBySlug(slug: String!): Vendor!
  getVendorView(vendorId: String!): VendorView!
  getVendors: [Vendor!]!
  getVendorsView(pagination: PaginationArgs): VendorsView!
  isVendorSlugAvailable(slug: String!): Boolean!
  me: User!
  shippingOffices(city: String): [ShippingOffice!]!
  trackShipment(trackingNumber: String!): WayBill!
}

"""User role"""
enum Role {
  ADMIN
  USER
}

input SendOtpInput {
  phone: String!
}

type ShippingOffice {
  address: String!
  addressAR: String!
  cityName: String!
  code: String!
  coordinates: Coordinates!
  firstShift: String!
  secondShift: String!
  weekendShift: String!
}

input SignupInput {
  email: String!
  firstName: String
  lastName: String
  password: String!
}

input SortOrder {
  direction: OrderDirection!
  field: String!
}

type SupplierModel {
  DepositShare: Int!
  InvoiceShare: Int!
  ProposedShare: Int!
  SupplierCode: Int!
  SupplierName: String!
}

type Tag {
  active: Boolean!

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  id: ID!
  products: [Product!]!
  title: String!
  title_ar: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
  vendor: Vendor!
  vendorId: String!
  workdays: [WorkDay!]!
}

type Token {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
}

type TransactionModel {
  AuthorizationId: String!
  CardNumber: String!
  Country: String!
  Currency: String!
  CustomerServiceCharge: String!
  DueValue: String!
  Error: String!
  ErrorCode: String!
  IpAddress: String!
  PaidCurrency: String!
  PaidCurrencyValue: String!
  PaymentGateway: String!
  PaymentId: String!
  ReferenceId: String!
  TrackId: String!
  TransactionDate: String!
  TransactionId: String!
  TransactionStatus: String!
  TransationValue: String!
}

input UpdateBookingInput {
  customerInfo: CustomerInput
  orderId: String!
  productId: String
  slots: [BookingSlotInput!]
  status: BookingStatus
  tagId: String
  vendorId: String
}

input UpdateCategoryInput {
  active: Boolean
  slug: String
  sortOrder: Int
  title: String
  title_ar: String
}

input UpdateCouponInput {
  active: Boolean
  code: String
  discount: Float!
}

input UpdateFormInput {
  content: String
  vendorId: String
}

input UpdateOrderInput {
  cartId: String
  deliveryMethod: DeliveryMethods
  paymentMethod: PaymentMethods
  status: OrderStatus
  vendorId: String
}

input UpdateProductInput {
  active: Boolean
  attendanceType: AttendanceType
  categoryId: String
  customerLocation: Boolean
  description: String
  description_ar: String
  duration: Int
  endDate: DateTime
  endTime: Boolean
  formId: String
  image: String
  itemsInStock: Int
  location: String
  meetingLink: String
  minPreorderDays: Int
  noOfSeats: Int
  slug: String
  sortOrder: Int
  startDate: DateTime
  tags: [String!]
  title: String
  title_ar: String
  type: ProductType
  variants: [VariantInput!]
}

input UpdateTagInput {
  active: Boolean
  productIds: [String!]
  title: String
  title_ar: String
  workdays: [WorkDayInput!]
}

input UpdateUserInput {
  firstname: String
  lastname: String
  vendorId: String
}

input UpdateVendorBankInput {
  accountNumber: String!
  bankName: String!
  beneficiary: String!
  iban: String!
}

input UpdateVendorInfoInput {
  address: String
  addressUrl: String
  certificates: [Certificate!]
  description: String
  description_ar: String
  email: String
  heroImage: String
  iban: String
  logo: String
  phone: String
  terms: String
}

input UpdateVendorInput {
  active: Boolean
  bank: UpdateVendorBankInput
  info: UpdateVendorInfoInput
  name: String
  settings: UpdateVendorSettingsInput
}

input UpdateVendorSettingsInput {
  deliveryMethods: [DeliveryMethods!]!
  paymentMethods: [PaymentMethods!]!
}

type User {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  email: String!
  firstName: String
  id: ID!
  lastName: String
  phone: String
  role: Role!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
  vendor: Vendor
  vendorId: String
  verified: Boolean!
}

type Variant {
  default: Boolean
  image: String!
  price: Int!
  quantity: Int!
  sku: String!
  title: String!
  title_ar: String!
}

input VariantInput {
  default: Boolean
  image: String
  price: Int!
  sku: String!
  title: String!
  title_ar: String!
}

type Vendor {
  active: Boolean!
  bank: VendorBank

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  id: ID!
  info: VendorInfo
  name: String!
  owner: User
  ownerId: String!
  settings: VendorSettings
  slug: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

type VendorBank {
  accountNumber: String!
  bankName: String!
  beneficiary: String!
  iban: String!
}

type VendorInfo {
  address: String
  addressUrl: String
  certificates: [Certificates!]
  cr_num: String
  description: String
  description_ar: String
  email: String
  facebook: String
  heroImage: String
  iban: String
  instagram: String
  location: String
  logo: String
  phone: String
  snapchat: String
  terms: String
  vat_num: String
  whatsapp: String
}

type VendorSettings {
  deliveryAreas: [DeliveryAreas!]!
  deliveryMethods: [DeliveryMethods!]!
  paymentMethods: [PaymentMethods!]!
}

type VendorView {
  accountManager: String
  numberBookings: Int
  numberCategories: Int
  numberCoupons: Int
  numberOrders: Int
  numberProducts: Int!
  numberServices: Int
  vendorName: String
  vendorUrl: String
}

type VendorsView {
  list: [VendorView!]
  totalCount: Int!
}

type WayBill {
  createDate: String!
  sawb: String!
  shipmentParcelsCount: Int!
  waybills: [WayBillItem!]!
}

type WayBillItem {
  awb: String!
  awbFile: String!
}

enum Weekday {
  Friday
  Monday
  Saturday
  Sunday
  Thursday
  Tuesday
  Wednesday
}

type WorkDay {
  day: Weekday!
  from: String!
  to: String!
}

input WorkDayInput {
  day: Weekday!
  from: String!
  to: String!
}