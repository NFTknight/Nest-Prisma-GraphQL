datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  // previewFeatures = []
}

generator dbml {
  provider = "prisma-dbml-generator"
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  password  String
  firstname String?
  lastname  String?
  posts     Post[]
  role      Role
}

model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean
  title     String
  content   String?
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  String?
}

enum Role {
  ADMIN
  USER
}

model Vendor {
  id             String     @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  description    String
  storeStatus    Boolean
  active         Boolean    @default(false)
  slug           String
  address        String
  phone          String
  email          String
  bankName       String
  iban           String
  accountNumber  String
  beneficiary    String
  addressUrl     String
  url            String     @unique
  isCheck        Boolean    @default(false)
  shortName      Boolean
  description_ar String
  terms          String
  isOpen         Boolean    @default(false)
  demo           Boolean    @default(false)
  Product        Product[]
  Category       Category[]
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}

model Category {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  title_ar  String
  vendorId  String
  vendor    Vendor    @relation(fields: [vendorId], references: [id])
  active    Boolean   @default(false)
  Product   Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

enum ProductType {
  PRODUCT
  SERVICE
  WORKSHOP
}

type ProductAttribute {
  key      String
  key_ar   String
  value    String
  value_ar String
}

type ProductVariant {
  title          String
  title_ar       String
  description    String
  description_ar String
  image          String
  type           ProductType
  active         Boolean     @default(false)
  price          Int
  price_ar       Int
  productId      String?     @db.ObjectId
}

model Product {
  id              String           @id @default(auto()) @map("_id") @db.ObjectId
  title           String
  title_ar        String
  description     String
  description_ar  String
  image           String
  type            ProductType
  vendorId        String           @db.ObjectId
  vendor          Vendor           @relation(fields: [vendorId], references: [id])
  active          Boolean          @default(false)
  minPreorderDays Int
  price           Int
  price_ar        Int
  Category        Category?        @relation(fields: [categoryId], references: [id])
  categoryId      String           @db.ObjectId
  variants        ProductVariant[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
}
